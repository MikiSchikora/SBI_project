Found rosetta database at: /usr/local/lib/python3.6/site-packages/pyrosetta-2018.3+release.979746-py3.6-macosx-10.12-x86_64.egg/pyrosetta/database; using it....
PyRosetta-4 2017 [Rosetta PyRosetta4.Release.python36.mac 2018.03+release.09797460979746a472963f77684b5205c4b77d73d0fe89d 2018-01-16T11:39:38] retrieved from: http://www.pyrosetta.org
(C) Copyright Rosetta Commons Member Institutions.
Created in JHU by Sergey Lyskov and PyRosetta Team.

If the file rosetta/small.clean.pdb already exists,it will be overwritten.
PDB rosetta/small.pdb successfully cleaned, non-ATOM lines removed.
Clean data written to rosetta/small.clean.pdb.
This file contains information abot the energy components of the refined pdb structure ./refined_model.pdb.


Below is the calculation of the energy scoring function terms:


core.init: Rosetta version: PyRosetta4.Release.python36.mac r166 2018.03+release.0979746 0979746a472963f77684b5205c4b77d73d0fe89d http://www.pyrosetta.org 2018-01-16T11:39:38
core.init: command: PyRosetta -ex1 -ex2aro -database /usr/local/lib/python3.6/site-packages/pyrosetta-2018.3+release.979746-py3.6-macosx-10.12-x86_64.egg/pyrosetta/database
core.init: 'RNG device' seed mode, using '/dev/urandom', seed=-744264020 seed_offset=0 real_seed=-744264020
core.init.random: RandomGenerator:init: Normal mode, seed=-744264020 RG_type=mt19937
core.chemical.GlobalResidueTypeSet: Finished initializing fa_standard residue type set.  Created 600 residue types
core.chemical.GlobalResidueTypeSet: Total time to initialize 0.939901 seconds.
core.import_pose.import_pose: File 'rosetta/small.clean.pdb' automatically determined to be of type PDB
core.io.pose_from_sfr.PoseFromSFRBuilder: [ WARNING ] skipping pdb residue b/c it's missing too many mainchain atoms:  109 E LEU LEU:NtermProteinFull
core.io.pose_from_sfr.PoseFromSFRBuilder: missing:  N  
core.io.pose_from_sfr.PoseFromSFRBuilder: missing:  CA 
core.io.pose_from_sfr.PoseFromSFRBuilder: missing:  C  
core.io.pose_from_sfr.PoseFromSFRBuilder: Adding undetected lower terminus type to residue 2,  110 E
core.conformation.Conformation: [ WARNING ] missing heavyatom:  OXT on residue GLU:CtermProteinFull 24
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
protocols.relax.ClassicRelax: Setting up default relax setting
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
core.pack.dunbrack.RotamerLibrary: shapovalov_lib::shap_dun10_smooth_level of 1( aka lowest_smooth ) got activated.
core.pack.dunbrack.RotamerLibrary: Binary rotamer library selected: /usr/local/lib/python3.6/site-packages/pyrosetta-2018.3+release.979746-py3.6-macosx-10.12-x86_64.egg/pyrosetta/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin
core.pack.dunbrack.RotamerLibrary: Using Dunbrack library binary file '/usr/local/lib/python3.6/site-packages/pyrosetta-2018.3+release.979746-py3.6-macosx-10.12-x86_64.egg/pyrosetta/database/rotamer/shapovalov/StpDwn_0-0-0/Dunbrack10.lib.bin'.
core.pack.dunbrack.RotamerLibrary: Dunbrack 2010 library took 0.640175 seconds to load from binary
protocols.relax.ClassicRelax: 
protocols.relax.ClassicRelax: 
protocols.relax.ClassicRelax: ===================================================================
protocols.relax.ClassicRelax:    Stage 1                                                         
protocols.relax.ClassicRelax:    Ramping repulsives with 8 outer cycles and 1 inner cycles
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 315 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 179100 bytes
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 301 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 143956 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 306 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 148116 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 307 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 145032 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 302 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 142376 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 301 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 141876 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 301 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 141876 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 301 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 141876 bytes
core.pack.task: Packer task: initialize from command line() 
core.pack.pack_rotamers: built 300 rotamers at 24 positions.
core.pack.interaction_graph.interaction_graph_factory: Instantiating DensePDInteractionGraph
core.pack.interaction_graph.interaction_graph_factory: IG: 141272 bytes
protocols.relax.ClassicRelax: 
protocols.relax.ClassicRelax: ===================================================================
protocols.relax.ClassicRelax:    Stage 2                                                         
protocols.relax.ClassicRelax:    Mainmintrial for 96 with a full repack every 100 cycles
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
protocols.relax.ClassicRelax: 
protocols.relax.ClassicRelax: ===================================================================
protocols.relax.ClassicRelax:    Stage 3                                                         
protocols.relax.ClassicRelax:    Mainmintrial for 24
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
core.pack.task: Packer task: initialize from command line() 
protocols.relax.ClassicRelax: 
core.scoring: 
------------------------------------------------------------
 Scores                       Weight   Raw Score Wghtd.Score
------------------------------------------------------------
 fa_atr                       1.000    -110.052    -110.052
 fa_rep                       0.550      16.878       9.283
 fa_sol                       1.000      86.098      86.098
 fa_intra_rep                 0.005      57.853       0.289
 fa_intra_sol_xover4          1.000       4.206       4.206
 lk_ball_wtd                  1.000      -4.322      -4.322
 fa_elec                      1.000     -35.908     -35.908
 pro_close                    1.250       0.017       0.022
 hbond_sr_bb                  1.000     -11.286     -11.286
 hbond_lr_bb                  1.000      -1.971      -1.971
 hbond_bb_sc                  1.000       0.000       0.000
 hbond_sc                     1.000      -5.537      -5.537
 dslf_fa13                    1.250       0.000       0.000
 omega                        0.400       0.553       0.221
 fa_dun                       0.700      36.052      25.236
 p_aa_pp                      0.600      -8.802      -5.281
 yhh_planarity                0.625       0.000       0.000
 ref                          1.000      14.282      14.282
 rama_prepro                  0.450      -8.583      -3.862
---------------------------------------------------
 Total weighted score:                      -38.582
protocols::checkpoint: Deleting checkpoints of ClassicRelax
